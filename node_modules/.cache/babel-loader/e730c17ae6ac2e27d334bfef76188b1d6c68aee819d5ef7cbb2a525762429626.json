{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/Desktop/Login/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport axios from \"axios\";\n\n// ŸÖŸÖŸÉŸÜ ÿ™ÿßÿÆÿØ ÿßŸÑÿ±ÿßÿ®ÿ∑ ŸÖŸÜ .env\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Interceptor ŸÑŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑÿ£ÿÆÿ∑ÿßÿ° ÿ™ŸÑŸÇÿßÿ¶ŸäÿßŸã\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response$data, _error$message;\n  let msg = \"‚ö†Ô∏è Unexpected error, please try again\";\n  if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n    msg = error.response.data.message;\n  } else if ((_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes(\"Network\")) {\n    msg = \"üö´ Server connection failed\";\n  }\n  return Promise.reject(_objectSpread(_objectSpread({}, error), {}, {\n    customMessage: msg\n  }));\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","response","use","error","_error$response","_error$response$data","_error$message","msg","data","message","includes","Promise","reject","_objectSpread","customMessage"],"sources":["C:/Users/ASUS/Desktop/Login/src/api/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// ŸÖŸÖŸÉŸÜ ÿ™ÿßÿÆÿØ ÿßŸÑÿ±ÿßÿ®ÿ∑ ŸÖŸÜ .env\r\nconst API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:5000/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Interceptor ŸÑŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑÿ£ÿÆÿ∑ÿßÿ° ÿ™ŸÑŸÇÿßÿ¶ŸäÿßŸã\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    let msg = \"‚ö†Ô∏è Unexpected error, please try again\";\r\n\r\n    if (error.response?.data?.message) {\r\n      msg = error.response.data.message;\r\n    } else if (error.message?.includes(\"Network\")) {\r\n      msg = \"üö´ Server connection failed\";\r\n    }\r\n\r\n    return Promise.reject({ ...error, customMessage: msg });\r\n  }\r\n);\r\n\r\nexport default API;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,cAAA;EACT,IAAIC,GAAG,GAAG,uCAAuC;EAEjD,KAAAH,eAAA,GAAID,KAAK,CAACF,QAAQ,cAAAG,eAAA,gBAAAC,oBAAA,GAAdD,eAAA,CAAgBI,IAAI,cAAAH,oBAAA,eAApBA,oBAAA,CAAsBI,OAAO,EAAE;IACjCF,GAAG,GAAGJ,KAAK,CAACF,QAAQ,CAACO,IAAI,CAACC,OAAO;EACnC,CAAC,MAAM,KAAAH,cAAA,GAAIH,KAAK,CAACM,OAAO,cAAAH,cAAA,eAAbA,cAAA,CAAeI,QAAQ,CAAC,SAAS,CAAC,EAAE;IAC7CH,GAAG,GAAG,6BAA6B;EACrC;EAEA,OAAOI,OAAO,CAACC,MAAM,CAAAC,aAAA,CAAAA,aAAA,KAAMV,KAAK;IAAEW,aAAa,EAAEP;EAAG,EAAE,CAAC;AACzD,CACF,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}