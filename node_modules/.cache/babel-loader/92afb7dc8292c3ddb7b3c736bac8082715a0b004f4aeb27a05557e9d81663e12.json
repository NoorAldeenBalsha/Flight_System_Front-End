{"ast":null,"code":"// src/api/axios.js\nimport axios from \"axios\";\n\n// قاعدة API\nconst API = axios.create({\n  baseURL: \"http://localhost:5000\",\n  withCredentials: true // مهم إذا الريفرش توكن في httpOnly cookie\n});\n\n// طلب قبل الإرسال لإضافة Access Token\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"accessToken\");\n  if (token) {\n    config.headers[\"Authorization\"] = \"Bearer \".concat(token);\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// التعامل مع استجابة خطأ 401 وتجديد Access Token\nAPI.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/user/refresh-token\", {\n        withCredentials: true // مهم إذا الريفرش توكن موجود بالكوكي\n      });\n      const newAccessToken = res.data.accessToken;\n      localStorage.setItem(\"accessToken\", newAccessToken);\n\n      // إعادة المحاولة للطلب الأصلي بعد تجديد الـ token\n      originalRequest.headers[\"Authorization\"] = \"Bearer \".concat(newAccessToken);\n      return axios(originalRequest);\n    } catch (err) {\n      // إذا فشل الريفرش توكن: تسجيل خروج أو إعادة توجيه للـ login\n      localStorage.removeItem(\"accessToken\");\n      window.location.href = \"/auth\";\n      return Promise.reject(err);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","concat","error","Promise","reject","response","_error$response","originalRequest","status","_retry","res","get","newAccessToken","data","accessToken","setItem","err","removeItem","window","location","href"],"sources":["C:/Users/ASUS/Desktop/BPR602-Project2/Flight_System_Front-End/src/api/axios.js"],"sourcesContent":["// src/api/axios.js\r\nimport axios from \"axios\";\r\n\r\n// قاعدة API\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost:5000\",\r\n  withCredentials: true, // مهم إذا الريفرش توكن في httpOnly cookie\r\n});\r\n\r\n// طلب قبل الإرسال لإضافة Access Token\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// التعامل مع استجابة خطأ 401 وتجديد Access Token\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        const res = await axios.get(\"http://localhost:5000/api/user/refresh-token\", {\r\n          withCredentials: true, // مهم إذا الريفرش توكن موجود بالكوكي\r\n        });\r\n\r\n        const newAccessToken = res.data.accessToken;\r\n        localStorage.setItem(\"accessToken\", newAccessToken);\r\n\r\n        // إعادة المحاولة للطلب الأصلي بعد تجديد الـ token\r\n        originalRequest.headers[\"Authorization\"] = `Bearer ${newAccessToken}`;\r\n        return axios(originalRequest);\r\n      } catch (err) {\r\n        // إذا فشل الريفرش توكن: تسجيل خروج أو إعادة توجيه للـ login\r\n        localStorage.removeItem(\"accessToken\");\r\n        window.location.href = \"/auth\";\r\n        return Promise.reject(err);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default API;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,aAAAC,MAAA,CAAaJ,KAAK,CAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAb,GAAG,CAACI,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC1BU,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACf,MAAMC,eAAe,GAAGL,KAAK,CAACN,MAAM;EAEpC,IAAI,EAAAU,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAC,8CAA8C,EAAE;QAC1EnB,eAAe,EAAE,IAAI,CAAE;MACzB,CAAC,CAAC;MAEF,MAAMoB,cAAc,GAAGF,GAAG,CAACG,IAAI,CAACC,WAAW;MAC3ChB,YAAY,CAACiB,OAAO,CAAC,aAAa,EAAEH,cAAc,CAAC;;MAEnD;MACAL,eAAe,CAACP,OAAO,CAAC,eAAe,CAAC,aAAAC,MAAA,CAAaW,cAAc,CAAE;MACrE,OAAOxB,KAAK,CAACmB,eAAe,CAAC;IAC/B,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZ;MACAlB,YAAY,CAACmB,UAAU,CAAC,aAAa,CAAC;MACtCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;MAC9B,OAAOjB,OAAO,CAACC,MAAM,CAACY,GAAG,CAAC;IAC5B;EACF;EAEA,OAAOb,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}