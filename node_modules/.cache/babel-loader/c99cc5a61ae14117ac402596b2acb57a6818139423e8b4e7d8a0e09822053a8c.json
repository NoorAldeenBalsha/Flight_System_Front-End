{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Login\\\\src\\\\context\\\\auth\\\\authState.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./authReducer\";\nimport axios from \"axios\";\nimport setAuthToken from \"./setAuthToken\";\nimport removeAuthToken from \"./removeAuthToken\";\nconst AuthState = props => {\n  _s();\n  const initialState = {\n    isAuthenticated: false,\n    user: null,\n    loading: false,\n    current: 0,\n    errors: [],\n    verified: false,\n    displayVerified: false\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n  const userLoaded = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const res = await axios.get(\"http://localhost:5000/api/user/auth/login\", config);\n      dispatch({\n        type: \"USER_LOADED\",\n        payload: res.data\n      });\n      setTimeout(() => {\n        dispatch({\n          type: \"REMOVE_DISPLAY_VERIFIED\"\n        });\n      }, 3000);\n      return 0;\n    } catch (err) {\n      // console.log(err.response.data);\n      dispatch({\n        type: \"AUTH_ERROR\"\n      });\n      return 0;\n    }\n  };\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/user/auth/register\", formData, config);\n      dispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: res.data\n      });\n      localStorage.setItem(\"token\", res.data);\n      userLoaded();\n    } catch (err) {\n      dispatch({\n        type: \"REGISTER_FAIL\",\n        payload: err.response\n      });\n      console.log(err.response);\n      setTimeout(() => dispatch({\n        type: \"REMOVE_ALERT\"\n      }), 3500);\n    }\n  };\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/user/auth/login\", formData, config);\n      localStorage.setItem(\"token\", res.data);\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: res.data\n      });\n      // console.log(res.data);\n      userLoaded();\n      setTimeout(() => {\n        dispatch({\n          type: \"REMOVE_CURRENT\"\n        });\n      }, 3000);\n      return 0;\n    } catch (err) {\n      console.log(err.response);\n      if (!err.response) {\n        alert(\"Connection Cannot Be Made to Server\");\n      } else {\n        dispatch({\n          type: \"LOGIN_FAIL\",\n          payload: err.response\n        });\n        // console.log(err.response.data.errors[0].msg);\n        setTimeout(() => dispatch({\n          type: \"REMOVE_ALERT\"\n        }), 3500);\n      }\n    }\n  };\n  const set_loading = () => {\n    dispatch({\n      type: \"SET_LOADING\"\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: \"LOGOUT\"\n    });\n    removeAuthToken();\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      register: register,\n      login: login,\n      logout: logout,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      userLoaded: userLoaded,\n      user: state.user,\n      set_loading: set_loading,\n      errors: state.errors,\n      current: state.current,\n      verified: state.verified,\n      displayVerified: state.displayVerified\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthState;\nexport default AuthState;\nvar _c;\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"names":["React","useContext","useReducer","AuthContext","AuthReducer","axios","setAuthToken","removeAuthToken","AuthState","props","_s","initialState","isAuthenticated","user","loading","current","errors","verified","displayVerified","state","dispatch","userLoaded","localStorage","token","config","headers","res","get","type","payload","data","setTimeout","err","register","formData","post","setItem","response","console","log","login","alert","set_loading","logout","removeItem","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Login/src/context/auth/authState.js"],"sourcesContent":["import React, { useContext, useReducer } from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"./setAuthToken\";\r\nimport removeAuthToken from \"./removeAuthToken\";\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    loading: false,\r\n    current: 0,\r\n    errors: [],\r\n    verified: false,\r\n    displayVerified: false\r\n  };\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  const userLoaded = async () => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      };\r\n      const res = await axios.get(\"http://localhost:5000/api/user/auth/login\", config);\r\n      dispatch({ type: \"USER_LOADED\", payload: res.data });\r\n      setTimeout(() => {\r\n        dispatch({ type: \"REMOVE_DISPLAY_VERIFIED\" });\r\n      }, 3000);\r\n      return 0;\r\n    } catch (err) {\r\n      // console.log(err.response.data);\r\n      dispatch({ type: \"AUTH_ERROR\" });\r\n\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const register = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/api/user/auth/register\",\r\n        formData,\r\n        config\r\n      );\r\n      dispatch({ type: \"REGISTER_SUCCESS\", payload: res.data });\r\n      localStorage.setItem(\"token\", res.data);\r\n      userLoaded();\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"REGISTER_FAIL\",\r\n        payload: err.response\r\n      });\r\n      console.log(err.response);\r\n      setTimeout(() => dispatch({ type: \"REMOVE_ALERT\" }), 3500);\r\n    }\r\n  };\r\n  const login = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/api/user/auth/login\",\r\n        formData,\r\n        config\r\n      );\r\n      localStorage.setItem(\"token\", res.data);\r\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\r\n      // console.log(res.data);\r\n      userLoaded();\r\n      setTimeout(() => {\r\n        dispatch({ type: \"REMOVE_CURRENT\" });\r\n      }, 3000);\r\n      return 0;\r\n    } catch (err) {\r\n      console.log(err.response);\r\n      if (!err.response) {\r\n        alert(\"Connection Cannot Be Made to Server\");\r\n      } else {\r\n        dispatch({\r\n          type: \"LOGIN_FAIL\",\r\n          payload: err.response\r\n        });\r\n        // console.log(err.response.data.errors[0].msg);\r\n        setTimeout(() => dispatch({ type: \"REMOVE_ALERT\" }), 3500);\r\n      }\r\n    }\r\n  };\r\n  const set_loading = () => {\r\n    dispatch({ type: \"SET_LOADING\" });\r\n  };\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    dispatch({ type: \"LOGOUT\" });\r\n    removeAuthToken();\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        register: register,\r\n        login: login,\r\n        logout: logout,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        userLoaded: userLoaded,\r\n        user: state.user,\r\n        set_loading: set_loading,\r\n        errors: state.errors,\r\n        current: state.current,\r\n        verified: state.verified,\r\n        displayVerified: state.displayVerified\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}