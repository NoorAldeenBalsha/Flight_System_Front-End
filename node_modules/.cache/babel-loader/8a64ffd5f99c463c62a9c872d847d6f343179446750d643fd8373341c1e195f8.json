{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Login\\\\src\\\\context\\\\auth\\\\authState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, createContext } from \"react\";\nimport AuthReducer from \"./authReducer\";\nimport axios from \"axios\";\nimport setAuthToken from \"./setAuthToken\";\nimport AuthContext from \"./authContext\";\nconst AuthState = props => {\n  _s();\n  const initialState = {\n    isAuthenticated: false,\n    user: null,\n    loading: false,\n    errors: [],\n    current: 0,\n    verified: false,\n    displayVerified: false // لإظهار رسالة تحقق البريد\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  // تحميل بيانات المستخدم فقط بعد التحقق\n  const userLoaded = async () => {\n    if (localStorage.token) setAuthToken(localStorage.token);\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const res = await axios.get(\"http://localhost:5000/api/user/current-user\", config);\n\n      // تحقق من قيمة isAccountVerified\n      if (res.data.isAccountVerified) {\n        dispatch({\n          type: \"USER_LOADED\",\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: \"SET_DISPLAY_VERIFIED\"\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: \"AUTH_ERROR\"\n      });\n    }\n  };\n  const register = async formData => {\n    try {\n      const res = await axios.post(\"/api/user/auth/register\", formData);\n      if (res.data.isAccountVerified === false) {\n        dispatch({\n          type: \"DISPLAY_VERIFIED\",\n          payload: true\n        }); // <-- هنا نحدد أنه يحتاج تحقق\n      } else {\n        dispatch({\n          type: \"REGISTER_SUCCESS\",\n          payload: res.data\n        });\n      }\n    } catch (err) {\n      var _err$response;\n      dispatch({\n        type: \"REGISTER_FAIL\",\n        payload: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data\n      });\n    }\n  };\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/user/auth/login\", formData, config);\n      localStorage.setItem(\"token\", res.data.token);\n\n      // بعد تسجيل الدخول، نتحقق إذا الحساب مفعل\n      if (res.data.user.isAccountVerified) {\n        dispatch({\n          type: \"LOGIN_SUCCESS\",\n          payload: res.data\n        });\n        userLoaded();\n      } else {\n        dispatch({\n          type: \"SET_DISPLAY_VERIFIED\"\n        });\n      }\n    } catch (err) {\n      var _err$response2;\n      dispatch({\n        type: \"LOGIN_FAIL\",\n        payload: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data\n      });\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setAuthToken(null);\n    dispatch({\n      type: \"LOGOUT\"\n    });\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      register,\n      login,\n      logout,\n      userLoaded,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      errors: state.errors,\n      current: state.current,\n      verified: state.verified,\n      displayVerified: state.displayVerified\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthState;\nexport default AuthState;\nvar _c;\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"names":["React","useReducer","createContext","AuthReducer","axios","setAuthToken","AuthContext","AuthState","props","_s","initialState","isAuthenticated","user","loading","errors","current","verified","displayVerified","state","dispatch","userLoaded","localStorage","token","config","headers","res","get","data","isAccountVerified","type","payload","err","register","formData","post","_err$response","response","login","setItem","_err$response2","logout","removeItem","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Login/src/context/auth/authState.js"],"sourcesContent":["import React, { useReducer, createContext } from \"react\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"./setAuthToken\";\r\nimport AuthContext from \"./authContext\";\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    loading: false,\r\n    errors: [],\r\n    current: 0,\r\n    verified: false,\r\n    displayVerified: false, // لإظهار رسالة تحقق البريد\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  // تحميل بيانات المستخدم فقط بعد التحقق\r\n  const userLoaded = async () => {\r\n    if (localStorage.token) setAuthToken(localStorage.token);\r\n    try {\r\n      const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n      const res = await axios.get(\r\n        \"http://localhost:5000/api/user/current-user\",\r\n        config\r\n      );\r\n\r\n      // تحقق من قيمة isAccountVerified\r\n      if (res.data.isAccountVerified) {\r\n        dispatch({ type: \"USER_LOADED\", payload: res.data });\r\n      } else {\r\n        dispatch({ type: \"SET_DISPLAY_VERIFIED\" });\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: \"AUTH_ERROR\" });\r\n    }\r\n  };\r\n\r\nconst register = async (formData) => {\r\n  try {\r\n    const res = await axios.post(\"/api/user/auth/register\", formData);\r\n    \r\n    if(res.data.isAccountVerified === false){\r\n      dispatch({ type: \"DISPLAY_VERIFIED\", payload: true }); // <-- هنا نحدد أنه يحتاج تحقق\r\n    } else {\r\n      dispatch({ type: \"REGISTER_SUCCESS\", payload: res.data });\r\n    }\r\n  } catch (err) {\r\n    dispatch({ type: \"REGISTER_FAIL\", payload: err.response?.data });\r\n  }\r\n};\r\n\r\n  const login = async (formData) => {\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/api/user/auth/login\",\r\n        formData,\r\n        config\r\n      );\r\n      localStorage.setItem(\"token\", res.data.token);\r\n\r\n      // بعد تسجيل الدخول، نتحقق إذا الحساب مفعل\r\n      if (res.data.user.isAccountVerified) {\r\n        dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\r\n        userLoaded();\r\n      } else {\r\n        dispatch({ type: \"SET_DISPLAY_VERIFIED\" });\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: \"LOGIN_FAIL\", payload: err.response?.data });\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setAuthToken(null);\r\n    dispatch({ type: \"LOGOUT\" });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        register,\r\n        login,\r\n        logout,\r\n        userLoaded,\r\n        isAuthenticated: state.isAuthenticated,\r\n        user: state.user,\r\n        loading: state.loading,\r\n        errors: state.errors,\r\n        current: state.current,\r\n        verified: state.verified,\r\n        displayVerified: state.displayVerified,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}