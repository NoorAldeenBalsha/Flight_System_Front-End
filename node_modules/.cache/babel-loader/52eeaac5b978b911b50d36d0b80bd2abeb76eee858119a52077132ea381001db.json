{"ast":null,"code":"import _objectSpread from \"C:/Users/ASUS/Desktop/Login/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Login\\\\src\\\\context\\\\auth\\\\authState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, createContext } from \"react\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./authReducer\";\nimport axios from \"axios\";\nconst AuthState = props => {\n  _s();\n  const initialState = {\n    isAuthenticated: false,\n    user: null,\n    loading: false,\n    errors: [],\n    current: 0,\n    verified: false,\n    displayVerified: false,\n    isAccountVerified: false // جديد: لتخزين حالة التحقق من البريد\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  // تسجيل مستخدم جديد\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/user/auth/register\", formData, config);\n\n      // تخزين الـ token فقط إذا الحساب تم التحقق منه مباشرة (قد لا يكون الحال)\n      if (res.data.isAccountVerified) {\n        localStorage.setItem(\"token\", res.data.token);\n        dispatch({\n          type: \"REGISTER_SUCCESS\",\n          payload: res.data\n        });\n      } else {\n        dispatch({\n          type: \"REGISTER_SUCCESS\",\n          payload: _objectSpread(_objectSpread({}, res.data), {}, {\n            isAccountVerified: false\n          })\n        });\n      }\n    } catch (err) {\n      var _err$response;\n      dispatch({\n        type: \"REGISTER_FAIL\",\n        payload: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data\n      });\n    }\n  };\n\n  // تسجيل الدخول\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/user/auth/login\", formData, config);\n      localStorage.setItem(\"token\", res.data.token);\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: res.data\n      });\n    } catch (err) {\n      var _err$response2;\n      dispatch({\n        type: \"LOGIN_FAIL\",\n        payload: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data\n      });\n    }\n  };\n\n  // تسجيل الخروج\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: \"LOGOUT\"\n    });\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      register,\n      login,\n      logout,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      errors: state.errors,\n      current: state.current,\n      verified: state.verified,\n      displayVerified: state.displayVerified,\n      isAccountVerified: state.isAccountVerified\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthState;\nexport default AuthState;\nvar _c;\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"names":["React","useReducer","createContext","AuthContext","AuthReducer","axios","AuthState","props","_s","initialState","isAuthenticated","user","loading","errors","current","verified","displayVerified","isAccountVerified","state","dispatch","register","formData","config","headers","res","post","data","localStorage","setItem","token","type","payload","_objectSpread","err","_err$response","response","login","_err$response2","logout","removeItem","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/Login/src/context/auth/authState.js"],"sourcesContent":["import React, { useReducer, createContext } from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    loading: false,\r\n    errors: [],\r\n    current: 0,\r\n    verified: false,\r\n    displayVerified: false,\r\n    isAccountVerified: false, // جديد: لتخزين حالة التحقق من البريد\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  // تسجيل مستخدم جديد\r\n  const register = async (formData) => {\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/api/user/auth/register\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      // تخزين الـ token فقط إذا الحساب تم التحقق منه مباشرة (قد لا يكون الحال)\r\n      if (res.data.isAccountVerified) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        dispatch({ type: \"REGISTER_SUCCESS\", payload: res.data });\r\n      } else {\r\n        dispatch({\r\n          type: \"REGISTER_SUCCESS\",\r\n          payload: { ...res.data, isAccountVerified: false },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: \"REGISTER_FAIL\", payload: err.response?.data });\r\n    }\r\n  };\r\n\r\n  // تسجيل الدخول\r\n  const login = async (formData) => {\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:5000/api/user/auth/login\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: \"LOGIN_FAIL\", payload: err.response?.data });\r\n    }\r\n  };\r\n\r\n  // تسجيل الخروج\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    dispatch({ type: \"LOGOUT\" });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        register,\r\n        login,\r\n        logout,\r\n        isAuthenticated: state.isAuthenticated,\r\n        user: state.user,\r\n        loading: state.loading,\r\n        errors: state.errors,\r\n        current: state.current,\r\n        verified: state.verified,\r\n        displayVerified: state.displayVerified,\r\n        isAccountVerified: state.isAccountVerified,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}